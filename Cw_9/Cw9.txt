--Dzięki indeksom, system bazodanowy może bezpośrednio przechodzić do konkretnych rekordów, 
--zamiast przeglądać całą tabelę. W 2 przypadku, poświęcamy czas by stworzyć indeksy, 
--co później przekłada się na szybkość znajdywania rekordów

CREATE INDEX idx_customerid ON sales.customer (customerid);
CREATE INDEX idx_territoryid ON sales.customer (territoryid);
CREATE INDEX idx_orderdate ON sales.salesorderheader (orderdate);

EXPLAIN ANALYZE

SELECT
c.customerid,
c.personid,
c.storeid,
c.territoryid,
soh.salesorderid,
soh.orderdate,
soh.duedate,
soh.shipdate
FROM sales.customer c
INNER JOIN sales.salesorderheader soh ON c.customerid = soh.customerid
WHERE c.territoryid = 5

BEGIN TRANSACTION;

UPDATE Production.Product
SET ListPrice = ListPrice * 1.1
WHERE ProductID = 680;

COMMIT TRANSACTION;

BEGIN TRANSACTION;

DELETE FROM production.product
WHERE ProductID = 707;

ROLLBACK TRANSACTION;

BEGIN TRANSACTION;

INSERT INTO production.product(
	productid, name, productnumber, makeflag, finishedgoodsflag, color, safetystocklevel, reorderpoint, standardcost, listprice, size, sizeunitmeasurecode, weightunitmeasurecode, weight, daystomanufacture, productline, class, style, productsubcategoryid, productmodelid, sellstartdate, sellenddate, discontinueddate, rowguid, modifieddate)
	VALUES (00234, 'Product', 'SC', 'true', 'true', 'RED', 400, 310, 1200, 1048, 58, 'CM', 'LB', 2.24, 1, 'R', 'H', 'U', 14, 6, '2008-04-30 00:00:00', null, null, '2e1ef41a-c08a-4ff6-8ada-bde58b64a712', '2014-02-08 10:01:36.827');